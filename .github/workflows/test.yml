name: Test
on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]

jobs:
  BuildAndTestUbuntu:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: release name
        id: release
        run: |
          branch=$(echo ${{github.ref}} | sed 's/refs\/\(heads\|tags\)\///g') && \
            release=$([[ "$branch" =~ v[0-9.]+ ]] && echo $branch || echo $branch) && \
            echo "release_name=$release" && \
            printf "::set-output name=release::%s\n" "$release"

      - name: install packages
        run: sudo apt-get install -y cmake clang valgrind python3

      - name: Release Build
        run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && make

      - name: setup python dependencies
        run: cd tools/google_benchmark_plot && python3 -m pip install -r ./requirements.txt

      - name: benchmark
        run: |
          cd build/benchmark/
          for f in $(ls | grep '^benchmark.*$'); do
            eval "./$f --benchmark_out_format=json --benchmark_out=$f.json"
            python3 ../../tools/google_benchmark_plot/plot.py -f $f.json -m cpu_time --output $f.png --logx --logy
          done

      - name: release benchmark results
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./build/benchmark/*.png"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.release }}

      - name: Release Test
        run: cd build/test && ctest

      - name: Memory Leak Detection
        run: cd build/test && for f in $(ls | grep '^test[^.]*$'); do echo "$f" &&  eval "valgrind ./$f" || exit 1; done

      - name: CXX14 Build
        run: mkdir build_cxx14 && cd build_cxx14 && cmake .. -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=14 && make

      - name: CXX11 Build
        run: mkdir build_cxx11 && cd build_cxx11 && cmake .. -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=11 && make

      - name: Debug Build
        run: rm -rf build && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Debug && make

      - name: Debug Test
        run: cd build/test && ctest

  BuildAndTestWindows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Release Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles" ..
          nmake

      - name: CXX14 Build
        run: |
          mkdir build_cxx14
          cd build_cxx14
          cmake -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=14 -G "NMake Makefiles" ..
          nmake

      - name: CXX11 Build
        run: |
          mkdir build_cxx11
          cd build_cxx11
          cmake -DCMAKE_BUILD_TYPE=Debug -DCXX_VERSION=11 -G "NMake Makefiles" ..
          nmake

      - name: Release Test
        run: cd build/test && ctest

      - name: Debug Build
        run: |
          mkdir build_debug
          cd build_debug
          cmake -DCMAKE_BUILD_TYPE=Debug -G "NMake Makefiles" ..
          nmake

      - name: Debug Test
        run: cd build_debug/test && ctest
